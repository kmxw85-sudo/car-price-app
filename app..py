# -*- coding: utf-8 -*-
"""Copy of Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16PZ6T4hKw-naDXxxTNmvMFFoHjDn0WL8
"""

import pandas as pd
import numpy as np

from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score

data = pd.read_csv("car_data.csv")

print(data.head())

print(data.info())

print(data.describe())

x_train,x_test,y_train,y_test = train_test_split(x.join(df[cat_cols]),y,test_size=0.2,random_state=42)

models = {
    "LinearRegression": LinearRegression(),
    "DecisionTree": DecisionTreeRegressor(random_state=42),
    "RandomForest": RandomForestRegressor(random_state=42,n_jobs=-1)
}

for name,model in models.items():
  scores = cross_val_score(model, x_train, y_train, cv=5, scoring="r2")
  print(f"{name}: R2 = {scores.mean():.3f}")

param_grid = {
    "n_estimators": [100, 200,300],
    "max_depth": [None, 5, 10],
    "min_samples_split": [2, 5, 10]
}

grid = GridSearchCV(rf, param_grid, cv=5, scoring="r2",n_jobs=-1)
grid.fit(x_train,y_train)